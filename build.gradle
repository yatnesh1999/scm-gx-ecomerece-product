plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ecomerece'
version = '0.0.1-SNAPSHOT'
description = 'Product project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Spring OAuth2 Client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final' // Use the latest stable version
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' // Use the same version

	// Option 1: Auth0 Java JWT library
	//implementation 'com.auth0:java-jwt:4.4.0' // Use the latest stable version

	// Option 2: JJWT library (JSON Web Token for Java)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // Use the latest stable version
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5' // Required for JJWT
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Required for JJWT with Jackson


	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
